package kassaV2;
/**
 *@author SirNoolas - David Vonk
 */

import javax.swing.*;

import java.awt.event.*;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import java.io.*;
import java.util.Date;

import kassaV2.CheckSupplies.Item;
import kassaV2.CustomerKassa.Customer;

public class ItemKassa extends JFrame{
	JPanel thePanel;
	JTextField indexField;
	JSpinner amountSpinner;
	JList listOfNamesOfItems;
	DefaultListModel namesOfItems = new DefaultListModel();
	JScrollPane scroller;

	static int soldAmount;
	static double totalCalc;

	static Item soldItem;
	static Item[] sellableItems;

	public static void main(String[] args) {

		new ItemKassa();

	} // end of main

	public ItemKassa(){
		// read all item data from the file                
		sellableItems = getItemInfo();

		this.setSize(800, 650);
		this.setResizable(true);
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setTitle("CHCSystems - Vooraden");

		thePanel = new JPanel();  

		// init Names of Items array		
		for(int i = 0; i < sellableItems.length; i++){
			if(sellableItems[i].itemName.startsWith(" ")){
				namesOfItems.addElement(sellableItems[i].itemName + ":");
			}else{
				if(sellableItems[i].availableAmount == 999){
					namesOfItems.addElement((i) + ": " + sellableItems[i].itemName + "; Prijs: €" + sellableItems[i].itemPrice + "; Vooraad: (Bijna) ONEINDIG" );
				}else{
					namesOfItems.addElement((i) + (": ") + sellableItems[i].itemName + "; Prijs: €" + sellableItems[i].itemPrice + "; Vooraad (stuks): " + sellableItems[i].availableAmount);
				}

			}

		} // end of for
		listOfNamesOfItems = new JList(namesOfItems);
		listOfNamesOfItems.setVisibleRowCount(20);

		scroller = new JScrollPane(listOfNamesOfItems,
				JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,
				JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

		listOfNamesOfItems.setFixedCellHeight(25);
		listOfNamesOfItems.setFixedCellWidth(750);

		thePanel.add(scroller);

	}

	private static class Item{

		public String itemName;
		public double itemPrice;
		public int availableAmount;

		public Item(String itemName, double itemPrice, int availableAmount){

			this.itemName = itemName;
			this.itemPrice = itemPrice;
			this.availableAmount = availableAmount;

		} // end of constructor Item

	} // end of class Item

	// writing to the file
	public void writeStart(){
		Customer customerInfo = getCustomer();	

		PrintWriter custOutput = createFile("customerHistoryItem.CHCFile");
		createCustomer(customerInfo, custOutput);

	} // end of writeStart

	private static class Customer{
		public String itemName;
		public double paidMoney;
		public int soldAmount;

		public Customer(String itemName, double paidMoney, int soldAmount){
			this.itemName = itemName;
			this.paidMoney = paidMoney;
			this.soldAmount = soldAmount;
		} // end of Customer

	} // end of Customer

	private static Customer getCustomer(){
		Customer customerInfo = new Customer(soldItem.itemName, totalCalc, soldAmount);

		return customerInfo;
	}

	private static PrintWriter createFile(String fileName){

		File customerHistory = new File(fileName);

		try{

			PrintWriter infoToWrite = new PrintWriter(
					new BufferedWriter(
							new FileWriter(customerHistory, true)));
			return infoToWrite;

		}catch(IOException e){
			System.out.println("An I/O Error Ocurred");
			System.exit(0);

		} // end of try/catch

		return null;

	} // end of PrintWriter

	private static void createCustomer(Customer customerInfo, PrintWriter custOutput){
		String stringCustomerInfo = customerInfo.itemName + " - " + Integer.toString(customerInfo.soldAmount) + " - " + Double.toString(customerInfo.paidMoney);

		Date date = new Date();

		custOutput.println(date + " - " + stringCustomerInfo);
		custOutput.close();

	}

	private static Item[] getItemInfo(){

		File catalog = new File("CATALOGUS.CHCFile");

		try{
			BufferedReader getInfo = new BufferedReader(
					new FileReader(catalog));

			int expectedLines = 100;

			Item[] tempSellableItems = new Item[expectedLines];
			Item[] sellableItems = null;

			String[] itemInfo = getInfo.readLine().split(" - ");
			String tempItemInfo = "";

			for(int i = 0; i < expectedLines && itemInfo != null; i++){
				tempSellableItems[i] = new Item(itemInfo[0], Double.parseDouble(itemInfo[1]), Integer.parseInt(itemInfo[2]));
				tempItemInfo = getInfo.readLine();
				if(tempItemInfo != null){
					itemInfo = tempItemInfo.split(" - ");
				}else if(tempSellableItems[i + 1] == null){
					sellableItems = new Item[i+1];
					for(int x = 0; x <= i; x++){
						sellableItems[x] = tempSellableItems[x];
					}
					break;
				}
			}

			getInfo.close();

			return sellableItems;

		}catch(FileNotFoundException e){
			System.out.println("Couldn't Find File");
			System.exit(0);

		}catch(IOException e){
			System.out.println("An I/O Error Occured");
			System.exit(0);
		} // end of try/catch

		return null;
	} // end of class getItemInfo
}
